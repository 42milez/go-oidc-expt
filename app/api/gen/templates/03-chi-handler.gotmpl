//  HANDLER AND OTHERS
// --------------------------------------------------

type ChiServerOptions struct {
    BaseRouter       *chi.Mux
    Middlewares      *MiddlewareFuncMap
    ErrorHandlerFunc func(w http.ResponseWriter, r *http.Request, err error)
}

// MuxWithOptions creates http.Handler with additional options
func MuxWithOptions(si HandlerInterface, options *ChiServerOptions) *chi.Mux {
    r := options.BaseRouter

    if r == nil {
        r = chi.NewRouter()
    }

    if options.ErrorHandlerFunc == nil {
        options.ErrorHandlerFunc = func(w http.ResponseWriter, r *http.Request, err error) {
            http.Error(w, err.Error(), http.StatusBadRequest)
        }
    }

    {{range .}}
    r.Group(func(r chi.Router) {
        if mw := options.Middlewares.raw("{{.OperationId}}"); mw != nil {
            r.Use(mw...)
        }
        r.{{.Method | lower | title}}("{{.Path | swaggerUriToChiUri}}", si.{{.OperationId}})
    })
    {{end}}

    return r
}
