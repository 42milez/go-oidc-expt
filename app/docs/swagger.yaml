basePath: /v1
definitions:
  model.AuthenticateRequest:
    properties:
      name:
        type: string
      password:
        type: string
    required:
    - name
    - password
    type: object
  model.AuthenticateResponse:
    properties:
      error:
        type: string
    type: object
  model.CheckHealthResponse:
    properties:
      status:
        type: integer
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    required:
    - error
    type: object
  model.RegisterUserRequest:
    properties:
      name:
        type: string
      password:
        type: string
    required:
    - name
    - password
    type: object
  model.RegisterUserResponse:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: https://example.com/support/
  description: This is an experimental implementation of OpenID Connect with Go.
  license:
    name: MIT
    url: TBD
  termsOfService: https://example.com/terms/
  title: go-oidc-server
  version: N/A
paths:
  /health:
    get:
      consumes:
      - application/json
      description: This endpoint checks service condition
      operationId: CheckHealth.ServeHTTP
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CheckHealthResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.CheckHealthResponse'
      summary: checks service condition
      tags:
      - HealthCheck
  /v1/authorize:
    get:
      consumes:
      - application/json
      description: TBD
      operationId: AuthorizeGet.ServeHTTP
      parameters:
      - description: TBD
        in: query
        name: name
        required: true
        type: string
      - description: TBD
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: TBD
      tags:
      - OIDC
    post:
      consumes:
      - application/json
      description: TBD
      operationId: AuthorizePost.ServeHTTP
      parameters:
      - description: TBD
        in: formData
        name: name
        required: true
        type: string
      - description: TBD
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: TBD
      tags:
      - OIDC
  /v1/user/authenticate:
    post:
      consumes:
      - application/json
      description: This endpoint authenticates user.
      operationId: Authenticate.ServeHTTP
      parameters:
      - description: user credential
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.AuthenticateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AuthenticateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: authenticates user
      tags:
      - User
  /v1/user/register:
    post:
      consumes:
      - application/json
      description: This endpoint registers user.
      operationId: Register.ServeHTTP
      parameters:
      - description: user credential
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.RegisterUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.RegisterUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: registers user
      tags:
      - User
schemes:
- http
- https
swagger: "2.0"
