openapi: "3.1.0"
info:
  version: 1.0.0
  title: go-oidc-server
  description: An experimental implementation of OpenID Connect with Go
  termsOfService: http://example.com/terms/
  contact:
    name: API Support
    email: support@example.com
    url: https://example.com/support/
  license:
    name: MIT
    url: TBD
servers:
  - url: http://localhost:8080
    description: Development Environment
  - url: https://staging.idp.example.com
    description: Staging Environment
  - url: https://idp.example.com
    description: Production Environment
tags:
  - name: Authentication
  - name: Authorization
  - name: HealthCheck
  - name: Registration
  - name: Token
paths:
  /health:
    get:
      description: Check the health of service.
      operationId: checkHealth
      tags:
        - HealthCheck
      responses:
        '200':
          description: service operational
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
              example:
                status: 200
        '500':
          description: service not operational
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
              example:
                status: 500
  /authentication:
    post:
      description: Authenticates a user.
      operationId: authenticate
      tags:
        - Authentication
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        description: User credential
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UserName'
                - $ref: '#/components/schemas/UserPassword'
      responses:
        '200':
          description: Successfully authenticated.
          headers:
            Location:
              description: Redirects consent endpoint with authorization request parameters.
              schema:
                type: string
                format: url
              example: http://localhost:8080/consent?client_id=WDAVqWSJzs78oZE8JXmVfq0j1NhJvb&display=page&max_age=86400&nonce=GFpkQE1azrQtQ6DYLj1KSVENVYU69k&prompt=consent&redirect_uri=https%3A%2F%2Fexample.com%2Fcb&response_type=code&scope=openid%20profile%20email&state=IanAk1SxWLp2jKA6F8Cwl2zBV2Y8tU
        '400':
          $ref: '#/components/responses/InvalidRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /consent:
    post:
      description: Grant relying party permission to use user data.
      operationId: consent
      tags:
        - Authorization
      parameters:
        - $ref: '#/components/parameters/SessionId'
      responses:
        '302':
          description: Consent successfully accepted.
          headers:
            Location:
              description: Redirects to authorization endpoint with authorization request parameters.
              schema:
                type: string
                format: url
              example: http://localhost:8080/authorization?client_id=WDAVqWSJzs78oZE8JXmVfq0j1NhJvb&display=page&max_age=86400&nonce=GFpkQE1azrQtQ6DYLj1KSVENVYU69k&prompt=consent&redirect_uri=https%3A%2F%2Fexample.com%2Fcb&response_type=code&scope=openid%20profile%20email&state=IanAk1SxWLp2jKA6F8Cwl2zBV2Y8tU
        '500':
          $ref: '#/components/responses/InternalServerError'
  /authorization:
    get:
      description: Determines authentication and authorization status of user, redirects user to the appropriate page and returns an authorization code.
      operationId: authorize
      tags:
        - Authorization
      parameters:
        - $ref: '#/components/parameters/ClientID'
        - $ref: '#/components/parameters/Nonce'
        - $ref: '#/components/parameters/RedirectUri'
        - $ref: '#/components/parameters/ResponseType'
        - $ref: '#/components/parameters/Scope'
        - $ref: '#/components/parameters/State'
        - $ref: '#/components/parameters/Display'
        - $ref: '#/components/parameters/MaxAge'
        - $ref: '#/components/parameters/Prompt'
        - $ref: '#/components/parameters/SessionId'
      responses:
        '302':
          description: Successfully authorized.
          headers:
            Location:
              description: Redirects to the "redirect_uri" with authorization code.
              schema:
                type: string
                format: url
        '400':
          $ref: '#/components/responses/InvalidRequest'
        '401':
          $ref: '#/components/responses/UnauthorizedRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /token:
    post:
      description: Returns a new Access Token, Refresh Token, and ID Token using the authorization code obtained from the authorization endpoint. The Refresh Token is used to reissue the access token.
      operationId: token
      tags:
        - Token
      security:
        - basicAuth: []
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        $ref: '#/components/requestBodies/TokenRequest'
      responses:
        '200':
          description: Successfully accepted.
          headers:
            Cache-Control:
              schema:
                type: string
                example: 'no-store'
            Pragma:
              schema:
                type: string
                example: 'no-cache'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Token not accepted.
          headers:
            Cache-Control:
              schema:
                type: string
                example: 'no-store'
            Pragma:
              schema:
                type: string
                example: 'no-cache'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenErrorResponse'
  /user/registration:
    post:
      description: Creates a new user in the database.
      operationId: register
      tags:
        - Registration
      requestBody:
        description: User to register onto the database
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UserName'
                - $ref: '#/components/schemas/UserPassword'
      responses:
        '200':
          description: Successfully registered.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Registration failed due to invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 400
                summary: invalid request
                details:
                  - some error 1
                  - some error 2
                  - some error 3
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  securitySchemes:
    # https://swagger.io/docs/specification/authentication/basic-authentication/
    basicAuth:
      description: The combination of "client_id" and "client_secret" that concatenated with colon and base64 encoded.
      type: http
      scheme: basic
  parameters:
    SessionId:
      name: sid
      in: cookie
      description: Session ID
      schema:
        type: string
      example: MTY5NDA4Nzc4MnxNNjBEOHUwTUxMLThObHBKajA2bkxkRFZJZC1kZnROc21WZjZFbFEtaVpmaHF4YkVvRk5uak9WYkdtRVM3eXctS1l4Q0FHeldab2M9fHDaZZGFzG1bSJdDRhgWPmMCQPuuFWg1h3VSE1WzOL8q
      x-go-json-ignore: true
      x-oapi-codegen-extra-tags:
        url: sid
    ClientID:
      name: client_id
      in: query
      description: represents "client_id" parameter
      required: true
      schema:
        type: string
        x-go-type: typedef.ClientID
      example: WDAVqWSJzs78oZE8JXmVfq0j1NhJvb
      x-go-name: ClientID
      x-oapi-codegen-extra-tags:
        schema: client_id
        url: client_id
        validate: required,alphanum
    Code:
      name: code
      in: query
      description: represents "code" parameter
      required: true
      schema:
        type: string
      example: ov32fxNbOTNlyTEOSDVlb0qPz7qR7G
      x-oapi-codegen-extra-tags:
        schema: code
        validate: required,alphanum
    Display:
      name: display
      in: query
      description: represents "display" parameter
      required: true
      schema:
        type: string
      example: page
      x-oapi-codegen-extra-tags:
        schema: display
        url: display
        validate: required,display-validator
    GrantType:
      name: grant_type
      in: query
      description: represents "grant_type" parameter
      required: true
      schema:
        type: string
        x-go-type: typedef.GrantType
      example: authorization_code
      x-oapi-codegen-extra-tags:
        schema: grant_type
        validate: required,grant-type-validator
    MaxAge:
      name: max_age
      in: query
      description: represents "max_age" parameter
      required: true
      schema:
        type: integer
        format: uint64
      example: 86400
      x-oapi-codegen-extra-tags:
        schema: max_age
        url: max_age
        validate: required,numeric
    Nonce:
      name: nonce
      in: query
      description: represents "nonce" parameter
      required: true
      schema:
        type: string
      example: GFpkQE1azrQtQ6DYLj1KSVENVYU69k
      x-oapi-codegen-extra-tags:
        schema: nonce
        url: nonce
        validate: required,alphanum
    Prompt:
      name: prompt
      in: query
      description: represents "prompt" parameter
      required: true
      schema:
        type: string
      example: consent
      x-oapi-codegen-extra-tags:
        schema: prompt
        url: prompt
        validate: required,prompt-validator
    RedirectUri:
      name: redirect_uri
      in: query
      description: represents "redirect_uri" parameter
      required: true
      schema:
        type: string
      example: https%3A%2F%2Fexample.com%2Fcb
      x-oapi-codegen-extra-tags:
        schema: redirect_uri
        url: redirect_uri
        validate: required,url_encoded
      x-go-name: RedirectURI
    ResponseType:
      name: response_type
      in: query
      description: represents "response_type" parameter
      required: true
      schema:
        type: string
      example: code
      x-oapi-codegen-extra-tags:
        schema: response_type
        url: response_type
        validate: required,response-type-validator
    Scope:
      name: scope
      in: query
      description: represents "scope" parameter
      required: true
      schema:
        type: string
      example: openid profile email
      x-oapi-codegen-extra-tags:
        schema: scope
        url: scope
        validate: required,scope-validator
    State:
      name: state
      in: query
      description: represents "state" parameter
      required: true
      schema:
        type: string
      example: IanAk1SxWLp2jKA6F8Cwl2zBV2Y8tU
      x-oapi-codegen-extra-tags:
        schema: state
        url: state
        validate: required,alphanum
  requestBodies:
    TokenRequest:
      description: Issues a new access token if grant_type is authorization_code, and reissues access token if grant_type is refresh_token.
      required: true
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            required:
              - grant_type
            properties:
              grant_type:
                description: represents "grant_type" parameter
                type: string
                example: authorization_code
                x-oapi-codegen-extra-tags:
                  schema: grant_type
                  validate: required,grant-type-validator
                x-go-type: typedef.GrantType
              code:
                description: represents "code" parameter
                type: string
                nullable: true
                example: EYdxIU30xstnWZKxgA54RJMz1YUR0J
                x-oapi-codegen-extra-tags:
                  schema: code
                  validate: omitempty,alphanum
              redirect_uri:
                description: represents "redirect_uri" parameter
                type: string
                nullable: true
                example: https%3A%2F%2Fexample.com%2Fcb
                x-oapi-codegen-extra-tags:
                  schema: redirect_uri
                  validate: omitempty,url_encoded
                x-go-name: RedirectURI
              refresh_token:
                description: represents "refresh_token" parameter
                type: string
                nullable: true
                example: 8xLOxBtZp8
                x-oapi-codegen-extra-tags:
                  schema: refresh_token
                  validate: omitempty,jwt
          examples:
            new:
              summary: Issue Access Token
              value:
                grant_type: authorization_code
                code: SplxlOBeZQQYbYS6WxSbIA
                redirect_uri: https%3A%2F%2Fexample.com%2Fcb
            refresh:
              summary: Reissue Access Token
              value:
                grant_type: refresh_token
                refresh_token: 8xLOxBtZp8
  responses:
    InternalServerError:
      description: Operation failed due to unexpected error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 500
            summary: unexpected error occurred
    InvalidRequest:
      description: Operation failed due to invalid request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 400
            summary: invalid request
            details:
              - some error 1
              - some error 2
              - some error 3
    UnauthorizedRequest:
      description: Operation failed due to unauthorized request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            status: 400
            summary: unauthorized request
            details:
              - some error 1
              - some error 2
              - some error 3
  schemas:
    Health:
      description: represents the status of service.
      type: object
      required:
        - status
      properties:
        status:
          type: integer
          format: uint64
          example: 200
    User:
      description: represents user data.
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: uint64
              example: 479552814176534893
              x-go-name: ID
              x-go-type: typedef.UserID
              x-oapi-codegen-extra-tags:
                validate: required
        - $ref: '#/components/schemas/UserName'
    UserName:
      description: represents a part of user data.
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: 42milez
          x-oapi-codegen-extra-tags:
            validate: required
    UserPassword:
      description: represents the password of user
      type: object
      required:
        - password
      properties:
        password:
          type: string
          example: vXdt-9ZQ34!8NM3z
          x-oapi-codegen-extra-tags:
            validate: required
    TokenResponse:
      description: ''
      type: object
      required:
        - access_token
        - refresh_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
          example: ''
        id_token:
          type: string
          example: ''
          x-go-name: IDToken
        refresh_token:
          type: string
          example: ''
        token_type:
          type: string
          x-go-type: typedef.TokenType
          example: 'Bearer'
        expires_in:
          type: integer
          format: uint64
          example: 3600
    TokenErrorResponse:
      description: https://openid-foundation-japan.github.io/openid-connect-core-1_0.ja.html#TokenErrorResponse
      type: object
      required:
        - error
      properties:
        error:
          type: string
          enum:
            - invalid_client
            - invalid_grant
            - invalid_request
            - invalid_scope
            - unauthorized_client
            - unsupported_grant_type
    ErrorResponse:
      description: represents error response
      type: object
      required:
        - status
        - summary
      properties:
        status:
          type: integer
          format: uint64
          example: 500
        summary:
          type: string
          example: unexpected error occurred
          x-go-type: xerr.PublicError
          x-go-type-skip-optional-pointer: true
        details:
          type: array
          items:
            type: string
          example:
            - some error 1
            - some error 2
            - some error 3
